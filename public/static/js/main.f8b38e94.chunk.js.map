{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","views/NotFound.js","components/LoginComponent.js","views/Login.js","views/articles/ArticlesShow.js","views/articles/ArticlesNew.js","views/articles/ArticlesIndex.js","views/articles/ArticlesEdit.js","index.js","Routes.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","Notfound","LoginComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","state","onSubmit","placeholder","type","React","Component","Login","components_LoginComponent","ArticlesShow","article","_this2","params","props","axios","get","concat","id","then","res","data","setState","title","image_url","ArticlesNew","handleChange","_event$target","name","value","defineProperty","setFile","files","length","image","formData","FormData","append","category","body","user_id","config","headers","content-type","_boundary","post","response","console","log","catch","error","localStorage","setItem","errors","info","encType","onChange","ArticlesIndex","ArticlesEdit","defaults","baseURL","ReactDOM","render","react_router_dom","react_router","exact","path","component","NotFound","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8b38e94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Hello\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nconst Notfound = () => <h1>Not found</h1>\n\nexport default Notfound","import React from 'react'\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n\n    }\n  }\n\nhandleSubmit = (event) => {\n\n}\n\nrender() {\n    return (\n\n      <form onSubmit={ this.handleSubmit }>\n        <input placeholder=\"Email\" type=\"email\" />\n        <br />\n        <input placeholder=\"password\" type=\"password\" />\n        <br />\n        <button> Submit </button>\n      </form>\n\n      )\n  }\n}\n\n\nexport default LoginComponent","import React from 'react'\nimport axios from 'axios'\nimport LoginComponent from '../components/LoginComponent'\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <LoginComponent />\n      )\n  }\n}\n\nexport default Login","import React from 'react'\nimport axios from 'axios'\n\nclass ArticlesShow extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      article: []\n    }\n  }\n\n  componentDidMount() {\n    const { match: { params } } = this.props;\n\n    axios.get(`/api/articles/${params.id}`)\n      .then(res => {\n        const article = res.data;\n        this.setState({ article });\n      }) \n  }\n\n  render() {\n    return (\n        <div>\n          <h2>{this.state.article.title}</h2>\n          <img src={this.state.article.image_url} alt=\"image\" />\n        </div>\n      )\n  }\n}\n\nexport default ArticlesShow","import React from 'react'\nimport axios from 'axios'\n\nclass ArticlesNew extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n        title: \"\",\n        category: \"\",\n        body: \"\",\n        user_id: \"\",\n        image: \"\",\n        errors: [],\n        error: \"\"\n    }\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  setFile = (event) => {\n    if (event.target.files.length > 0) {\n      this.state.image = event.target.files[0];\n    }\n  }\n\n  handleSubmit = event => {\n    // var params = {\n    //                           title: this.state.title, \n    //                           category: this.state.category, \n    //                           body: this.state.body, \n    //                           user_id: this.state.user_id,\n    //                           image: this.state.image\n    //                           }\n\n    const formData = new FormData();\n    formData.append('article[title]', this.state.title);\n    formData.append('article[category]', this.state.category);\n    formData.append('article[body]', this.state.body);\n    formData.append('article[user_id]', this.state.user_id);\n    formData.append('article[image]', this.state.image);\n\n    const config = {     \n        headers: { 'content-type': `multipart/form-data; boundary=${formData._boundary}` }\n    }\n\n    axios.post(\"/api/articles\", formData, config)\n\n    .then(response => {\n      console.log(response);\n      console.log(response.data);\n    }).catch(error => {\n        console.log(error.response.data);\n        this.setState({\n          error: error.response.data\n        })\n        localStorage.setItem(\"errors\", error);\n      });\n\n  }\n\n  componentDidCatch(error, info) {\n    console.log({error})\n  }\n\n  render() {\n    return (\n        <div>\n          <h2>ArticlesNew</h2>\n          <form encType=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <input \n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              placeholder=\"title\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <input \n              type=\"text\"\n              name=\"category\"\n              value={this.state.category}\n              placeholder=\"category\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <input \n              type=\"text\"\n              name=\"body\"\n              value={this.state.body}\n              placeholder=\"body\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <input \n              type=\"text\"\n              name=\"user_id\"\n              value={this.state.user_id}\n              placeholder=\"user\"\n              onChange={this.handleChange}\n            />\n            <br />  \n            <input \n              type=\"file\"\n              name=\"image\"\n              value={this.state.image}\n              placeholder=\"image\"\n              onChange={this.setFile}\n            />\n            <br />\n            <button>Submit</button>\n          </form>\n        </div>\n      )\n  }\n}\n\nexport default ArticlesNew","import React from 'react'\nimport axios from 'axios'\n\nclass ArticlesIndex extends React.Component {\n  render() {\n    return (\n        <div>\n          <h2>ArticlesIndex</h2>\n        </div>\n      )\n  }\n}\n\nexport default ArticlesIndex","import React from 'react'\nimport axios from 'axios'\n\nclass ArticlesEdit extends React.Component {\n  render() {\n    return (\n        <div>\n          <h2>ArticlesEdit</h2>\n        </div>\n      )\n  }\n}\n\nexport default ArticlesEdit","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Route,\n          NavLink, \n          BrowserRouter as Router, \n          Switch \n        } from 'react-router-dom'\nimport axios from 'axios'\nimport * as serviceWorker from './serviceWorker';\n\nimport { Routes } from './Routes'\n\naxios.defaults.baseURL = \n  process.env.NODE_ENV === \"development\" ? \"http://localhost:3000\" : \"/\";\n\nReactDOM.render(<Router>\n                  <Routes />\n                </Router>,\n                document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport { Route, \n          BrowserRouter as Router, \n          Switch \n        } from 'react-router-dom'\nimport NotFound from './views/NotFound'\nimport Login from './views/Login'\nimport ArticlesShow from './views/articles/ArticlesShow'\nimport ArticlesNew from './views/articles/ArticlesNew'\nimport ArticlesIndex from './views/articles/ArticlesIndex'\nimport ArticlesEdit from './views/articles/ArticlesEdit'\n\n\nexport const Routes = () => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/login\" component={Login} />\n            <Route exact path=\"/articles\" component={ArticlesIndex} />\n            <Route path=\"/articles/new\" component={ArticlesNew} />\n            <Route exact path=\"/articles/:id\" component={ArticlesShow} />\n            <Route path=\"/articles/:id/edit\" component={ArticlesEdit} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\n            // <Route path=\"/resources\" component={Resources} />"],"sourceRoot":""}